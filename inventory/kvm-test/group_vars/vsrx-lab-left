---

# SRX template variables

# Ethernet interfaces and their zones
#  set interfaces reth0.0 family inet address 172.16.10.10/24
#  set interfaces reth1.0 family inet address 172.16.100.20/24
#  set security zones security-zone untrust interfaces reth1.0
#  set security zones security-zone trust interfaces reth0.0
junos_interfaces:
  - name: "reth0"
    address: "172.16.10.10/24"
    zone: "trust"
  - name: "reth1"
    address: "172.16.100.20/24"
    zone: "untrust"

# Redundancy Groups (0 for Routing Engine, 1 for reth interfaces)
#  set chassis cluster redundancy-group 0 node 0 priority 100
#  set chassis cluster redundancy-group 0 node 1 priority 1
#  set chassis cluster redundancy-group 1 node 0 priority 100
#  set chassis cluster redundancy-group 1 node 1 priority 1
junos_cluster_redundancy_groups:
  - number: 0
    nodes:
      - id: 0
        priority: 100
      - id: 1
        priority: 1
  - number: 1
    nodes:
      - id: 0
        priority: 100
      - id: 1
        priority: 1

# Cluster reth interfaces are pairs of ge-{0,7}/0/x
#  set chassis cluster reth-count 2
#  set interfaces ge-0/0/1 gigether-options redundant-parent reth0
#  set interfaces ge-7/0/1 gigether-options redundant-parent reth0
#  set interfaces reth0 redundant-ether-options redundancy-group 1
#  set interfaces ge-0/0/2 gigether-options redundant-parent reth1
#  set interfaces ge-7/0/2 gigether-options redundant-parent reth1
#  set interfaces reth1 redundant-ether-options redundancy-group 1
junos_cluster_reth_interfaces:
  - name: "reth0"
    physical_interfaces: ["ge-0/0/1", "ge-7/0/1"]
    redundancy_group: 1
  - name: "reth1"
    physical_interfaces: ["ge-0/0/2", "ge-7/0/2"]
    redundancy_group: 1

# IPSec: ike gateways
#  set security ike gateway SRX5600 ike-policy preshared
#  set security ike gateway SRX5600 address 10.10.1.40
#  set security ike gateway SRX5600 external-interface reth0.0
junos_ike_gateways:
  - name: "srx1-right"
    ike_policy: "preshared"
    # address: "172.16.200.20" # when there is a middle box
    address: "172.16.100.30"
    external_interface: "reth1.0"

# IPSec: ipsec vpns
#  set security ipsec vpn SRX5600 bind-interface st0.0
#  set security ipsec vpn SRX5600 ike gateway SRX5600
#  set security ipsec vpn SRX5600 ike ipsec-policy std
#  set security ipsec vpn SRX5600 establish-tunnels immediately
junos_ipsec_vpns:
  - name: "vsrx-link"
    bind_interface: "st0.0"
    ike_gateway: "srx1-right"
    ike_ipsec_policy: "std"
    establish_tunnels: "immediately"

# IPSec: Route-based stN interfaces (put this in junos_interfaces?)
#  set interfaces st0 unit 0 multipoint
#  set interfaces st0 unit 0 family inet address 10.30.1.1/30
#  set security-zones security-zone vpn interfaces st0.0
# VPN Zone policies
#  set security zones security-zone vpn host-inbound-traffic system-services all
#  set security zones security-zone vpn host-inbound-traffic protocols all
#  set security policies from-zone trust to-zone vpn policy any match source-address any
#  set security policies from-zone trust to-zone vpn policy any match destination-address any
#  set security policies from-zone trust to-zone vpn policy any match application any
#  set security policies from-zone trust to-zone vpn policy any then permit
junos_config_blobs:
  # When there is a middle box
  # - name: "Set static routes across the middle"
  #   blob: |
  #       routing-options static route 172.16.200.0/24 next-hop 172.16.100.10;
  - name: "Set static routes down the tunnel"
    blob: |
        routing-options static route 172.16.20.0/24 next-hop st0.0;
  - name: "VPN Interface and Zone Policies"
    blob: |
        interfaces {
          st0 unit 0 {
            multipoint;
            family inet address 10.30.1.1/30
          }
        }
        security zones security-zone vpn {
          host-inbound-traffic {
            system-services all;
            protocols all;
          }
        }
        security policies from-zone trust to-zone vpn policy any {
          match {
            source-address any;
            destination-address any;
            application any;
          }
          then {
            permit;
          }
        }
