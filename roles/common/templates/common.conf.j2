#jinja2:lstrip_blocks: True
{# Common configuration for all JunOS devices #}
system {
    host-name {{ junos_config_hostname }};
    time-zone {{ junos_location.time_zone }};
    license {
        autoupdate {
        url {{ junos_autoupdate_url }};
        }
    }
    root-authentication {
        encrypted-password "{{ junos_root_auth.encrypted_password }}";
        ssh-rsa "{{ junos_root_auth.ssh_key }}";
    }
    {# Defaults for syslog from Juniper, could be templated if need in future #}
    syslog {
        user * {
            any emergency;
        }
        file messages {
            any any;
            authorization info;
        }
        file interactive-commands {
            interactive-commands any;
        }
    }
    services {
        ssh {
            {% if junos_ssh_root_login|capitalize == 'True' %}
            root-login allow;
            {% else %}
            root-login deny;
            {% endif %}
        }
        netconf {
            ssh;
        }
    }
    {% if junos_users is defined %}
    login {
        {% for user in junos_users %}
        user {{ user.name }} {
            uid {{ user.uid }};
            class {{ user.class }};
            authentication {
                ssh-rsa "{{ user.ssh_key }}";
            }
        }
        {% endfor %}
    }
    {% endif %}
}

interfaces {
  {% for interface in junos_interfaces %}
  {{ interface.name }} {
  unit {{ interface.unit }} {
      family inet {
        {% if interface.address is defined and interface.address|lower == 'dhcp' %}
        dhcp;
        {% else %}
        address {{ interface.address }};
        {% endif %}
      }
    }
  }
  {% endfor %}
}

{# Routing Options #}

{% if junos_routing_options %}
routing-options {
  router-id {{ junos_routing_options.router_id | mandatory }};
  {% if junos_routing_options.static_routes %}
  static {
  {% for static in junos_routing_options.static_routes %}
    route {{ static.prefix }} next-hop {{ static.next_hop }};
  {% endfor %}
  }
  {% endif %}
}
{% endif %}

{# OSPF #}
{% if junos_ospf is defined %}
protocols {
  ospf {
    reference-bandwidth {{ junos_ospf_reference_bw }};
    {% if junos_ospf.import is defined %}
    import [ {% for policy in junos_ospf.import %}{{ policy }} {% endfor %}];
    {% endif %}
    {% if junos_ospf.export is defined %}
    export [ {% for policy in junos_ospf.export %}{{ policy }} {% endfor %}];
    {% endif %}
    {% for area in junos_ospf.areas %}
    area {{ area.id }} {
      {% for interface in area.interfaces %}
      {% if interface.passive is defined %}
      interface {{ interface.name }} {
        passive;
      }
      {% else %}
      interface {{ interface.name }} {
        {% if interface.hello_interval is defined %}
        hello-interval {{ interface.hello_interval }};
        {% endif %}
        {% if interface.dead_interval is defined %}
        dead-interval {{ interface.dead_interval }};
        {% endif %}
        {% if interface.p2p is defined %}
        interface-type p2p;
        {% endif %}
        {% if interface.auth is defined %}
        authentication {
          {% for item in interface.auth %}
          md5 {{ item.id }} key "{{ item.phrase }}";
          {% endfor %}
        }
        {% endif %}
        {% if interface.bfd is defined %}
        bfd-liveness-detection {
          minimum-interval {{ interface.bfd.minimum_interval }};
          multiplier {{ interface.bfd.multiplier }};
          {% if interface.bfd.full_neighbors | default(false) %}
          full-neighbors-only;
          {% endif %}
        }
        {% endif %}
      }
      {% endif %}
      {% endfor %}
    }
    {% endfor %}
  }
}
{% endif %}

{# BGP #}
{% if junos_bgp_groups is defined %}
protocols {
    bgp {
        {% for group in junos_bgp_groups %}
        group {{ group.name }} {
            type {{ group.type }};
            local-as {{ group.local_asn }};
            {% if group.export_policy is defined %}
            export {{ group.export_policy }};
            {% endif %}
            {% for neighbor in group.neighbors %}
            neighbor {{ neighbor.address }} {
                peer-as {{ neighbor.asn }};
                {% if neighbor.bfd is defined %}
                bfd-liveness-detection {
                  minimum-interval {{ neighbor.bfd.minimum_interval }};
                  multiplier {{ neighbor.bfd.multiplier }};
                }
                {% endif %}
            }
            {% endfor %}
        }
        {% endfor %}
    }
}
{% endif %}

{# Policy Options #}
{% if junos_policy_options is defined %}
policy-options {
    {% for policy in junos_policy_options.policies %}
    policy-statement {{ policy.name }} {
        {% for term in policy.terms %}
        term {{ term.name }} {
            from {
                {% if term.protocol is defined %}
                protocol {{ term.protocol }};
                {% endif %}
                {% if term.route_filter is defined %}
                route-filter {{ term.route_filter }};
                {% endif %}
            }
            then {{ term.action }};
        }
        {% endfor %}
        {% if policy.community is defined or policy.as_path_prepend is defined %}
        then {
            {% if policy.community is defined %}
            community set {{ policy.community }};
            {% elif policy.as_path_prepend is defined %}
            as-path-prepend "{{ policy.as_path_prepend }}";
            {% endif %}
            {{ policy.action }};
        }
        {% else %}
        then {{ policy.action }};
        {% endif %}
    }
    {% endfor %}
    {% if junos_policy_options.communities is defined %}
    {% for community in junos_policy_options.communities %}
    community {{ community.name }} members {{ community.members }};
    {% endfor %}
    {% endif %}
}
{% endif %}
