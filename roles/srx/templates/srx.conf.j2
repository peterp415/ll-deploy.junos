#jinja2:lstrip_blocks: True
{# SRX Device Configuration #}

{# Ethernet Interfaces, reth and their zones #}

interfaces {
  {% for interface in junos_interfaces %}
  {{ interface.name }} {
  unit {{ interface.unit }} {
      family inet {
        {% if interface.address is defined and interface.address|lower == 'dhcp' %}
        dhcp;
        {% else %}
        address {{ interface.address }};
        {% endif %}
      }
    }
  }
  {% endfor %}
  {% for interface in junos_cluster_reth_interfaces %}
  {{ interface.name }} {
    redundant-ether-options redundancy-group {{ interface.redundancy_group }};
  }
  {% for physical_interface in interface.physical_interfaces %}
  {{ physical_interface }} {
    gigether-options {
      redundant-parent {{ interface.name }};
    }
  }
  {% endfor %}
  {% endfor %}
}

{% if junos_cluster_redundancy_groups or junos_cluster_reth_interfaces %}
chassis {
  cluster {
    {% for group in junos_cluster_redundancy_groups %}
    redundancy-group {{ group.number }} {
      {% for node in group.nodes %}
      node {{ node.id }} {
        priority {{ node.priority }};
      }
      {% endfor %}
    }
    {% endfor %}
    {% if junos_cluster_reth_interfaces %}
    reth-count {{ junos_cluster_reth_interfaces|length() }};
    {% endif %}
  }
}
{% endif %}

security {
  zones {
    {% for group in junos_interfaces|groupby('zone') %}
    {% if group[0]|lower == 'management' %}
    functional-zone management {
      interfaces {
        {% for interface in group[1] %}
        {{ interface.name }}.{{ interface.unit }} {
          host-inbound-traffic {
              system-services {
                  all;
              }
              protocols {
                  all;
              }
          }
        }
        {% endfor %}
      }
    }
    {% else %}
    security-zone {{ group[0] }} {
      {% for interface in group[1] %}
        interfaces {{ interface.name }}.{{ interface.unit }};
      {% endfor %}
    }
    {% endif %}
    {% endfor %}
  }
}

{# Policies #}

security {
  zones {
    {% for zone in junos_zones %}
    security-zone {{ zone.name }} {
      {% for policy in zone.host_inbound_traffic %}
      host-inbound-traffic {{ policy }};
      {% endfor %}
    }
    {% endfor %}
  }
  policies {
    {% for policy_group in junos_zone_security_policies %}
    from-zone {{ policy_group.from_zone }} to-zone {{ policy_group.to_zone }} {
      {% for policy in policy_group.policies %}
      policy {{ policy.name }} {
        match {
          {% for match in policy.match %}
          {{ match }};
          {% endfor %}
        }
        then {
          {{ policy.then }};
        }
      }
      {% endfor %}
    }
    {% endfor %}
  }
}

{# VPNs #}

{% if junos_ike_proposals or junos_ike_policies or security_ike_gateways %}
security {
  flow {
    tcp-mss {
      ipsec-vpn {
        mss 1420;
      }
    }
  }
  ike {
    {% for proposal in junos_ike_proposals %}
    proposal {{ proposal.name }} {
      {{ proposal.params }}
    }
    {% endfor %}
    {% for policy in junos_ike_policies %}
    policy {{ policy.name }} {
      {{ policy.params }}
    }
    {% endfor %}
    {% for gw in junos_ike_gateways %}
    gateway {{ gw.name }} {
      ike-policy {{ gw.ike_policy }};
      address {{ gw.address }};
      external-interface {{ gw.external_interface }};
    }
    {% endfor %}
  }
}
{% endif %}

{% if junos_ipsec_policies or junos_ipsec_vpns %}
security {
  ipsec {
    {% for policy in junos_ipsec_policies %}
    policy {{ policy.name }} {
      proposal-set {{ policy.proposal_set }};
    }
    {% endfor %}
    {% for vpn in junos_ipsec_vpns %}
    vpn {{ vpn.name }} {
      bind-interface {{ vpn.bind_interface }};
      ike {
        gateway {{ vpn.ike_gateway }};
        ipsec-policy {{ vpn.ike_ipsec_policy }};
      }
      establish-tunnels {{ vpn.establish_tunnels }};
    }
    {% endfor %}
  }
}
{% endif %}

{# Routing Options #}

{% if junos_routing_options %}
routing-options {
  {% if junos_routing_options.static_routes %}
  static {
  {% for static in junos_routing_options.static_routes %}
    route {{ static.prefix }} next-hop {{ static.next_hop }};
  {% endfor %}
  }
  {% endif %}
}
{% endif %}

{# Misc Blobs #}
{% if junos_config_blobs is defined %}
{% for blob in junos_config_blobs %}
{{ blob.blob }}
{% endfor %}
{% endif %}
